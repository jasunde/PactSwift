name: Build Pull Request

on:
  pull_request:
    branches:
      - '!main'

jobs:
  test_macos:
    name: "🤖 Test macOS"
    runs-on: macos-13

    env:
      XCODE_VERSION: 14.3.1

    concurrency:
      group: test_macos13_darwin_$SCHEME_${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: "🧑‍💻 Checkout repository"
        uses: actions/checkout@v3

      - name: "⚙️ Use Xcode ${{ env.XCODE_VERSION }}"
        run: sudo xcode-select -switch /Applications/Xcode_${{ env.XCODE_VERSION }}.app

      - name: "🧰 Prepare tools"
        run: |
          Scripts/prepare_build_tools

      - name: "🧪 xcodebuild clean test"
        run: |
          set -o pipefail && xcodebuild -resolvePackageDependencies | xcbeautify && xcodebuild clean test -project PactSwift.xcodeproj -scheme "PactSwift-macOS" -destination "arch=x86_64" | xcbeautify

      - name: "⚗️ swift test"
        run: |
          set -o pipefail && swift test -c release

  test_ios:
    name: "🤖 Test iOS"
    runs-on: macos-13
    needs: [test_macos]

    env:
      SCHEME: "PactSwift-iOS"
      DESTINATION: "platform=iOS Simulator,name=iPhone 14 Pro"
      XCODE_VERSION: 14.3.1

    concurrency:
      group: test_macos13_ios_$SCHEME_${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: "🧑‍💻 Checkout repository"
        uses: actions/checkout@v3

      - name: "⚙️ Use Xcode ${{ env.XCODE_VERSION }}"
        run: sudo xcode-select -switch /Applications/Xcode_${{ env.XCODE_VERSION }}.app

      - name: "🧰 Prepare tools"
        run: |
          Scripts/prepare_build_tools
      
      - name: "♘ Test for Carthage"
        run: |
          set -o pipefail && carthage build --no-skip-current --use-xcframeworks

      - name: "🧪 xcodebuild clean test"
        run: |
          set -o pipefail && xcodebuild -resolvePackageDependencies | xcbeautify && xcodebuild clean test -project PactSwift.xcodeproj -scheme "PactSwift-iOS" -destination "platform=iOS Simulator,name=iPhone 14 Pro" | xcbeautify
      
      - name: "⚗️ swift test"
        run: |
          swift test -c release

  after_success:
    needs: [test_ios]
    name: "🚚 Build demo projects"
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: "🚚 Build demo projects"
        run: |
          curl -X POST https://api.github.com/repos/surpher/pact-swift-examples/dispatches -H 'Accept: application/vnd.github.everest-preview+json' -u ${{ secrets.PACT_SWIFT_TOKEN }} --data '{"event_type":"PactSwift - ${{ github.event.head_commit.message }}"}'
      